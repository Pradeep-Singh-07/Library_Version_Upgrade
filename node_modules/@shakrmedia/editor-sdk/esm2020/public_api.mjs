/* eslint-disable no-var, prefer-const, prefer-arrow/prefer-arrow-functions */
var SHAKR_SDK_SCRIPT_ID = 'shakr-sdk-script';
var SDK_SCRIPT_URL = 'https://sdk.shakr.com/sdk.js';
function loadShakrSDK() {
    return new Promise(function (resolve, reject) {
        var onLoad = function () {
            resolve();
        };
        if (window.ShakrEditor) {
            return onLoad();
        }
        var existing = document.querySelector(`#${SHAKR_SDK_SCRIPT_ID}`);
        var script = existing || document.createElement('script');
        script.setAttribute('id', SHAKR_SDK_SCRIPT_ID);
        script.src = SDK_SCRIPT_URL;
        script.onload = onLoad;
        script.onerror = function (e) {
            reject(e);
        };
        if (!existing) {
            document.head.appendChild(script);
        }
    });
}
export function createShakrEditor(options) {
    return loadShakrSDK().then(function () {
        return window.createShakrEditor(options);
    });
}
export function createShakrreadyEditor(options) {
    return loadShakrSDK().then(function () {
        return window.createShakrreadyEditor(options);
    });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljX2FwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3B1YmxpY19hcGkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsOEVBQThFO0FBb0I5RSxJQUFJLG1CQUFtQixHQUFHLGtCQUFrQixDQUFDO0FBQzdDLElBQUksY0FBYyxHQUFHLDhCQUE4QixDQUFDO0FBb0JwRCxTQUFTLFlBQVk7SUFDakIsT0FBTyxJQUFJLE9BQU8sQ0FBTyxVQUFVLE9BQU8sRUFBRSxNQUFNO1FBQzlDLElBQUksTUFBTSxHQUFHO1lBQ1QsT0FBTyxFQUFFLENBQUM7UUFDZCxDQUFDLENBQUM7UUFFRixJQUFLLE1BQWMsQ0FBQyxXQUFXLEVBQUU7WUFDN0IsT0FBTyxNQUFNLEVBQUUsQ0FBQztTQUNuQjtRQUVELElBQUksUUFBUSxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQW9CLElBQUksbUJBQW1CLEVBQUUsQ0FBQyxDQUFDO1FBQ3BGLElBQUksTUFBTSxHQUFHLFFBQVEsSUFBSSxRQUFRLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBRTFELE1BQU0sQ0FBQyxZQUFZLENBQUMsSUFBSSxFQUFFLG1CQUFtQixDQUFDLENBQUM7UUFFL0MsTUFBTSxDQUFDLEdBQUcsR0FBRyxjQUFjLENBQUM7UUFDNUIsTUFBTSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7UUFDdkIsTUFBTSxDQUFDLE9BQU8sR0FBRyxVQUFVLENBQUM7WUFDeEIsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2QsQ0FBQyxDQUFDO1FBRUYsSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUNYLFFBQVEsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3JDO0lBQ0wsQ0FBQyxDQUFDLENBQUM7QUFDUCxDQUFDO0FBRUQsTUFBTSxVQUFVLGlCQUFpQixDQUFDLE9BQTJCO0lBQ3pELE9BQU8sWUFBWSxFQUFFLENBQUMsSUFBSSxDQUFDO1FBQ3ZCLE9BQVEsTUFBYyxDQUFDLGlCQUFpQixDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ3RELENBQUMsQ0FBQyxDQUFDO0FBQ1AsQ0FBQztBQUVELE1BQU0sVUFBVSxzQkFBc0IsQ0FDbEMsT0FBZ0M7SUFFaEMsT0FBTyxZQUFZLEVBQUUsQ0FBQyxJQUFJLENBQUM7UUFDdkIsT0FBUSxNQUFjLENBQUMsc0JBQXNCLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDM0QsQ0FBQyxDQUFDLENBQUM7QUFDUCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgbm8tdmFyLCBwcmVmZXItY29uc3QsIHByZWZlci1hcnJvdy9wcmVmZXItYXJyb3ctZnVuY3Rpb25zICovXG5cbmltcG9ydCB0eXBlIHtcbiAgICBTaGFrckVkaXRvcixcbiAgICBTaGFrckVkaXRvckFwcGVhcmFuY2VUeXBlLFxuICAgIFNoYWtyRWRpdG9yRXJyb3IsXG4gICAgU2hha3JFZGl0b3JFcnJvckV2ZW50LFxuICAgIFNoYWtyRWRpdG9yR2V0TWVkaWFFdmVudCxcbiAgICBTaGFrckVkaXRvck1lZGlhLFxuICAgIFNoYWtyRWRpdG9yTWVkaWFMaWJyYXJ5LFxuICAgIFNoYWtyRWRpdG9yT3Blbk1lZGlhTGlicmFyeUV2ZW50LFxuICAgIFNoYWtyRWRpdG9yT3B0aW9ucyxcbiAgICBTaGFrckVkaXRvclRoZW1lLFxuICAgIFNoYWtyRWRpdG9yVGhlbWVDdXN0b21pemVPcHRpb25zLFxuICAgIFNoYWtycmVhZHlFZGl0b3IsXG4gICAgU2hha3JyZWFkeUVkaXRvckVycm9yLFxuICAgIFNoYWtycmVhZHlFZGl0b3JFcnJvckV2ZW50LFxuICAgIFNoYWtycmVhZHlFZGl0b3JPcHRpb25zXG59IGZyb20gJ0BzaGFrcm1lZGlhL2VkaXRvci1zZGstdHlwZXMnO1xuXG52YXIgU0hBS1JfU0RLX1NDUklQVF9JRCA9ICdzaGFrci1zZGstc2NyaXB0JztcbnZhciBTREtfU0NSSVBUX1VSTCA9ICdodHRwczovL3Nkay5zaGFrci5jb20vc2RrLmpzJztcblxuZXhwb3J0IHR5cGUge1xuICAgIFNoYWtyRWRpdG9yLFxuICAgIFNoYWtyRWRpdG9yQXBwZWFyYW5jZVR5cGUsXG4gICAgU2hha3JFZGl0b3JFcnJvcixcbiAgICBTaGFrckVkaXRvckVycm9yRXZlbnQsXG4gICAgU2hha3JFZGl0b3JHZXRNZWRpYUV2ZW50LFxuICAgIFNoYWtyRWRpdG9yTWVkaWEsXG4gICAgU2hha3JFZGl0b3JNZWRpYUxpYnJhcnksXG4gICAgU2hha3JFZGl0b3JPcGVuTWVkaWFMaWJyYXJ5RXZlbnQsXG4gICAgU2hha3JFZGl0b3JPcHRpb25zLFxuICAgIFNoYWtyRWRpdG9yVGhlbWUsXG4gICAgU2hha3JFZGl0b3JUaGVtZUN1c3RvbWl6ZU9wdGlvbnMsXG4gICAgU2hha3JyZWFkeUVkaXRvcixcbiAgICBTaGFrcnJlYWR5RWRpdG9yRXJyb3IsXG4gICAgU2hha3JyZWFkeUVkaXRvckVycm9yRXZlbnQsXG4gICAgU2hha3JyZWFkeUVkaXRvck9wdGlvbnNcbn07XG5cbmZ1bmN0aW9uIGxvYWRTaGFrclNESygpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICByZXR1cm4gbmV3IFByb21pc2U8dm9pZD4oZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCk6IHZvaWQge1xuICAgICAgICB2YXIgb25Mb2FkID0gZnVuY3Rpb24gKCk6IHZvaWQge1xuICAgICAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgICB9O1xuXG4gICAgICAgIGlmICgod2luZG93IGFzIGFueSkuU2hha3JFZGl0b3IpIHtcbiAgICAgICAgICAgIHJldHVybiBvbkxvYWQoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBleGlzdGluZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3I8SFRNTFNjcmlwdEVsZW1lbnQ+KGAjJHtTSEFLUl9TREtfU0NSSVBUX0lEfWApO1xuICAgICAgICB2YXIgc2NyaXB0ID0gZXhpc3RpbmcgfHwgZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7XG5cbiAgICAgICAgc2NyaXB0LnNldEF0dHJpYnV0ZSgnaWQnLCBTSEFLUl9TREtfU0NSSVBUX0lEKTtcblxuICAgICAgICBzY3JpcHQuc3JjID0gU0RLX1NDUklQVF9VUkw7XG4gICAgICAgIHNjcmlwdC5vbmxvYWQgPSBvbkxvYWQ7XG4gICAgICAgIHNjcmlwdC5vbmVycm9yID0gZnVuY3Rpb24gKGUpOiB2b2lkIHtcbiAgICAgICAgICAgIHJlamVjdChlKTtcbiAgICAgICAgfTtcblxuICAgICAgICBpZiAoIWV4aXN0aW5nKSB7XG4gICAgICAgICAgICBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKHNjcmlwdCk7XG4gICAgICAgIH1cbiAgICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVNoYWtyRWRpdG9yKG9wdGlvbnM6IFNoYWtyRWRpdG9yT3B0aW9ucyk6IFByb21pc2U8U2hha3JFZGl0b3I+IHtcbiAgICByZXR1cm4gbG9hZFNoYWtyU0RLKCkudGhlbihmdW5jdGlvbiAoKTogUHJvbWlzZTxTaGFrckVkaXRvcj4ge1xuICAgICAgICByZXR1cm4gKHdpbmRvdyBhcyBhbnkpLmNyZWF0ZVNoYWtyRWRpdG9yKG9wdGlvbnMpO1xuICAgIH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU2hha3JyZWFkeUVkaXRvcihcbiAgICBvcHRpb25zOiBTaGFrcnJlYWR5RWRpdG9yT3B0aW9uc1xuKTogUHJvbWlzZTxTaGFrcnJlYWR5RWRpdG9yPiB7XG4gICAgcmV0dXJuIGxvYWRTaGFrclNESygpLnRoZW4oZnVuY3Rpb24gKCk6IFByb21pc2U8U2hha3JyZWFkeUVkaXRvcj4ge1xuICAgICAgICByZXR1cm4gKHdpbmRvdyBhcyBhbnkpLmNyZWF0ZVNoYWtycmVhZHlFZGl0b3Iob3B0aW9ucyk7XG4gICAgfSk7XG59XG4iXX0=