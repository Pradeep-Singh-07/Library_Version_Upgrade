import 'should';
export default function () {
  it('should allow construction', function () {
    this.agent.should.be.an.Object();
  });
  it('should allow setting license', async function () {
    this.agent.license = 'trial';
    this.agent.license.should.equal('trial');
  });
  it('should allow getting the user', async function () {
    const user = await this.agentWithToken.users.get('me');
    user.should.be.an.Object();
  });
  it('should allow session creation', async function () {
    const session = await this.agentWithToken.sessions.create();
    session.should.be.an.Object();
  });
  it('should allow getting a session by id', async function () {
    const session = await this.agentWithToken.sessions.create({
      custom_data: {
        cobrowseio_demo_id: 'unittest'
      }
    });
    const found = await this.agentWithToken.sessions.get(session.id);
    found.id.should.be.a.String();
    found.id.should.equal(session.id);
  });
  it('should allow getting a session by code', async function () {
    const session = await this.agentWithToken.sessions.create({
      custom_data: {
        cobrowseio_demo_id: 'unittest'
      }
    });
    const found = await this.agentWithToken.sessions.get(session.code);
    found.id.should.be.a.String();
    found.id.should.equal(session.id);
  });
  it('should allow listing sessions', async function () {
    const sessions = await this.agentWithToken.sessions.list();
    sessions.should.be.an.Array();
  });
  it('should allow ending sessions', function (done) {
    (async () => {
      const session = await this.agentWithToken.sessions.create({
        custom_data: {
          cobrowseio_demo_id: 'unittest'
        }
      });
      session.on('ended', () => done());
      await session.end();
    })();
  }).timeout(5000);
}