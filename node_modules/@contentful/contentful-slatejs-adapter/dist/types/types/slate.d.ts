declare namespace Slate {
    type NodeObject = 'document' | 'block' | 'inline' | 'text';
    interface Node {
        object: NodeObject;
        type?: string;
        data?: object;
        isVoid?: boolean;
    }
    interface Document extends Node {
        object: 'document';
        nodes: Block[];
    }
    interface Block extends Node {
        object: 'block';
        nodes: Array<Block | Inline | Text>;
    }
    interface Inline extends Node {
        object: 'inline';
        nodes: Array<Inline | Text>;
    }
    interface Text extends Node {
        object: 'text';
        leaves: TextLeaf[];
    }
    interface Mark {
        type: string;
        data: Record<string, any>;
        object: 'mark';
    }
    interface TextLeaf {
        object: 'leaf';
        text: string;
        marks?: Mark[];
    }
}
