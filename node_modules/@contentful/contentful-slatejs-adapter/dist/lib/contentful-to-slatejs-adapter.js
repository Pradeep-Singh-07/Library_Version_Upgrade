var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { getDataOrDefault } from './helpers';
import { fromJSON } from './schema';
export default function toSlatejsDocument(_a) {
    var document = _a.document, schema = _a.schema;
    // TODO:
    // We allow adding data to the root document node, but Slate >v0.5.0
    // has no concept of a root document node. We should determine whether
    // this will be a compatibility problem for existing users.
    return document.content.flatMap(function (node) { return convertNode(node, fromJSON(schema)); });
}
function convertNode(node, schema) {
    if (node.nodeType === 'text') {
        return convertTextNode(node);
    }
    else {
        var contentfulNode = node;
        var childNodes = contentfulNode.content.flatMap(function (childNode) {
            return convertNode(childNode, schema);
        });
        var slateNode = convertElementNode(contentfulNode, childNodes, schema);
        return slateNode;
    }
}
function convertElementNode(contentfulBlock, slateChildren, schema) {
    var children = slateChildren.length === 0 && schema.isTextContainer(contentfulBlock.nodeType)
        ? [{ text: '', data: {} }]
        : slateChildren;
    return {
        type: contentfulBlock.nodeType,
        children: children,
        isVoid: schema.isVoid(contentfulBlock),
        data: getDataOrDefault(contentfulBlock.data),
    };
}
function convertTextNode(node) {
    return __assign({ text: node.value, data: getDataOrDefault(node.data) }, convertTextMarks(node));
}
function convertTextMarks(node) {
    var marks = {};
    for (var _i = 0, _a = node.marks; _i < _a.length; _i++) {
        var mark = _a[_i];
        marks[mark.type] = true;
    }
    return marks;
}
//# sourceMappingURL=contentful-to-slatejs-adapter.js.map