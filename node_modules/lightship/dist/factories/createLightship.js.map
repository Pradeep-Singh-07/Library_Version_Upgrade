{"version":3,"sources":["../../src/factories/createLightship.ts"],"names":["log","Logger","child","namespace","defaultConfiguration","detectKubernetes","gracefulShutdownTimeout","port","shutdownDelay","shutdownHandlerTimeout","signals","terminate","process","exit","userConfiguration","blockingTasks","resolveFirstReady","deferredFirstReady","Promise","resolve","then","info","eventEmitter","EventEmitter","beacons","shutdownHandlers","configuration","Error","serverIsReady","serverIsShuttingDown","isServerReady","length","debug","app","modeIsLocal","server","listen","undefined","address","httpTerminator","get","_request","response","status","send","SERVER_IS_SHUTTING_DOWN","SERVER_IS_READY","SERVER_IS_NOT_READY","SERVER_IS_NOT_SHUTTING_DOWN","signalNotReady","warn","signalReady","shutdown","nextReady","gracefulShutdownTimeoutId","Infinity","setTimeout","unref","check","off","on","clearTimeout","shutdownHandlerTimeoutId","shutdownHandler","error","signal","createBeacon","context","beacon","push","die","trace","splice","indexOf","emit","isServerShuttingDown","queueBlockingTask","blockingTask","result","filter","maybeTargetBlockingTask","registerShutdownHandler","whenFirstReady"],"mappings":"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","sourcesContent":["// eslint-disable-next-line fp/no-events\nimport {\n  EventEmitter,\n} from 'events';\nimport {\n  AddressInfo,\n} from 'net';\nimport delay from 'delay';\nimport express from 'express';\nimport {\n  createHttpTerminator,\n} from 'http-terminator';\nimport {\n  serializeError,\n} from 'serialize-error';\nimport Logger from '../Logger';\nimport {\n  SERVER_IS_NOT_READY,\n  SERVER_IS_NOT_SHUTTING_DOWN,\n  SERVER_IS_READY,\n  SERVER_IS_SHUTTING_DOWN,\n} from '../states';\nimport type {\n  BeaconContext,\n  BlockingTask,\n  ConfigurationInput,\n  Configuration,\n  Lightship,\n  ShutdownHandler,\n  BeaconController,\n} from '../types';\nimport {\n  isKubernetes,\n} from '../utilities';\n\nconst log = Logger.child({\n  namespace: 'factories/createLightship',\n});\n\nconst defaultConfiguration: Configuration = {\n  detectKubernetes: true,\n  gracefulShutdownTimeout: 60_000,\n  port: 9_000,\n  shutdownDelay: 5_000,\n  shutdownHandlerTimeout: 5_000,\n  signals: [\n    'SIGTERM',\n    'SIGHUP',\n    'SIGINT',\n  ],\n  terminate: () => {\n    // eslint-disable-next-line no-process-exit\n    process.exit(1);\n  },\n};\n\ninterface Beacon {\n  context: BeaconContext\n}\n\nexport default (userConfiguration?: ConfigurationInput): Lightship => {\n  let blockingTasks: BlockingTask[] = [];\n\n  let resolveFirstReady: () => void;\n  const deferredFirstReady = new Promise<void>((resolve) => {\n    resolveFirstReady = resolve;\n  });\n\n  // eslint-disable-next-line promise/always-return, promise/catch-or-return\n  deferredFirstReady.then(() => {\n    log.info('service became available for the first time');\n  });\n\n  const eventEmitter = new EventEmitter();\n\n  const beacons: Beacon[] = [];\n\n  const shutdownHandlers: Array<ShutdownHandler> = [];\n\n  const configuration: Configuration = {\n    ...defaultConfiguration,\n    ...userConfiguration,\n  };\n\n  if (configuration.gracefulShutdownTimeout < configuration.shutdownHandlerTimeout) {\n    throw new Error('gracefulShutdownTimeout cannot be lesser than shutdownHandlerTimeout.');\n  }\n\n  let serverIsReady = false;\n  let serverIsShuttingDown = false;\n\n  const isServerReady = () => {\n    if (blockingTasks.length > 0) {\n      log.debug('service is not ready because there are blocking tasks');\n\n      return false;\n    }\n\n    return serverIsReady;\n  };\n\n  const app = express();\n\n  const modeIsLocal = configuration.detectKubernetes === true && isKubernetes() === false;\n\n  const server = app.listen(modeIsLocal ? undefined : configuration.port, () => {\n    const address = server.address() as AddressInfo;\n    log.info('Lightship HTTP service is running on port %s', address.port);\n  });\n\n  const httpTerminator = createHttpTerminator({\n    server,\n  });\n\n  app.get('/health', (_request, response) => {\n    if (serverIsShuttingDown) {\n      response.status(500).send(SERVER_IS_SHUTTING_DOWN);\n    } else if (serverIsReady) {\n      response.send(SERVER_IS_READY);\n    } else {\n      response.status(500).send(SERVER_IS_NOT_READY);\n    }\n  });\n\n  app.get('/live', (_request, response) => {\n    if (serverIsShuttingDown) {\n      response.status(500).send(SERVER_IS_SHUTTING_DOWN);\n    } else {\n      response.send(SERVER_IS_NOT_SHUTTING_DOWN);\n    }\n  });\n\n  app.get('/ready', (_request, response) => {\n    if (isServerReady()) {\n      response.send(SERVER_IS_READY);\n    } else {\n      response.status(500).send(SERVER_IS_NOT_READY);\n    }\n  });\n\n  const signalNotReady = () => {\n    if (serverIsReady === false) {\n      log.warn('server is already in a SERVER_IS_NOT_READY state');\n    }\n\n    log.info('signaling that the server is not ready to accept connections');\n\n    serverIsReady = false;\n  };\n\n  const signalReady = () => {\n    if (serverIsShuttingDown) {\n      log.warn('server is already shutting down');\n\n      return;\n    }\n\n    log.info('signaling that the server is ready');\n\n    if (blockingTasks.length > 0) {\n      log.debug('service will not become immediately ready because there are blocking tasks');\n    }\n\n    serverIsReady = true;\n\n    if (blockingTasks.length === 0) {\n      resolveFirstReady();\n    }\n  };\n\n  const shutdown = async (nextReady: boolean) => {\n    if (serverIsShuttingDown) {\n      log.warn('server is already shutting down');\n\n      return;\n    }\n\n    // @see https://github.com/gajus/lightship/issues/12\n    // @see https://github.com/gajus/lightship/issues/25\n    serverIsReady = nextReady;\n    serverIsShuttingDown = true;\n\n    log.info('received request to shutdown the service');\n\n    if (configuration.shutdownDelay) {\n      log.debug('delaying shutdown handler by %d seconds', configuration.shutdownDelay / 1_000);\n\n      await delay(configuration.shutdownDelay);\n    }\n\n    let gracefulShutdownTimeoutId;\n\n    if (configuration.gracefulShutdownTimeout !== Infinity) {\n      gracefulShutdownTimeoutId = setTimeout(() => {\n        log.warn('graceful shutdown timeout; forcing termination');\n\n        configuration.terminate();\n      }, configuration.gracefulShutdownTimeout);\n\n      gracefulShutdownTimeoutId.unref();\n    }\n\n    if (beacons.length) {\n      await new Promise<void>((resolve) => {\n        const check = () => {\n          log.debug('checking if there are live beacons');\n\n          if (beacons.length > 0) {\n            log.info({\n              beacons,\n            }, 'program termination is on hold because there are live beacons');\n          } else {\n            log.info('there are no live beacons; proceeding to terminate the Node.js process');\n\n            eventEmitter.off('beaconStateChange', check);\n\n            resolve();\n          }\n        };\n\n        eventEmitter.on('beaconStateChange', check);\n\n        check();\n      });\n    }\n\n    if (gracefulShutdownTimeoutId) {\n      clearTimeout(gracefulShutdownTimeoutId);\n    }\n\n    let shutdownHandlerTimeoutId;\n\n    if (configuration.shutdownHandlerTimeout !== Infinity) {\n      shutdownHandlerTimeoutId = setTimeout(() => {\n        log.warn('shutdown handler timeout; forcing termination');\n\n        configuration.terminate();\n      }, configuration.shutdownHandlerTimeout);\n\n      shutdownHandlerTimeoutId.unref();\n    }\n\n    log.debug('running %d shutdown handler(s)', shutdownHandlers.length);\n\n    for (const shutdownHandler of shutdownHandlers) {\n      try {\n        await shutdownHandler();\n      } catch (error) {\n        log.error({\n          error: serializeError(error),\n        }, 'shutdown handler produced an error');\n      }\n    }\n\n    if (shutdownHandlerTimeoutId) {\n      clearTimeout(shutdownHandlerTimeoutId);\n    }\n\n    log.debug('all shutdown handlers have run to completion; proceeding to terminate the Node.js process');\n\n    await httpTerminator.terminate();\n\n    setTimeout(() => {\n      log.warn('process did not exit on its own; investigate what is keeping the event loop active');\n\n      configuration.terminate();\n    }, 1_000)\n\n      .unref();\n  };\n\n  if (modeIsLocal) {\n    log.warn('shutdown handlers are not used in the local mode');\n  } else {\n    for (const signal of configuration.signals) {\n      process.on(signal, () => {\n        log.debug({\n          signal,\n        }, 'received a shutdown signal');\n\n        shutdown(false);\n      });\n    }\n  }\n\n  const createBeacon = (context?: BeaconContext): BeaconController => {\n    const beacon = {\n      context: context || {},\n    };\n\n    beacons.push(beacon);\n\n    return {\n      die: async () => {\n        log.trace({\n          beacon,\n        }, 'beacon has been killed');\n\n        beacons.splice(beacons.indexOf(beacon), 1);\n\n        eventEmitter.emit('beaconStateChange');\n\n        await delay(0);\n      },\n    };\n  };\n\n  return {\n    createBeacon,\n    isServerReady,\n    isServerShuttingDown: () => {\n      return serverIsShuttingDown;\n    },\n    queueBlockingTask: (blockingTask: BlockingTask) => {\n      blockingTasks.push(blockingTask);\n\n      // eslint-disable-next-line promise/catch-or-return\n      blockingTask.then((result) => {\n        blockingTasks = blockingTasks.filter((maybeTargetBlockingTask) => {\n          return maybeTargetBlockingTask !== blockingTask;\n        });\n\n        if (blockingTasks.length === 0 && serverIsReady === true) {\n          resolveFirstReady();\n        }\n\n        return result;\n      });\n    },\n    registerShutdownHandler: (shutdownHandler) => {\n      shutdownHandlers.push(shutdownHandler);\n    },\n    server,\n    shutdown: () => {\n      return shutdown(false);\n    },\n    signalNotReady,\n    signalReady,\n    whenFirstReady: () => {\n      return deferredFirstReady;\n    },\n  };\n};\n"],"file":"createLightship.js"}